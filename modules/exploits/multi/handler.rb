##
# $Id: handler.rb 6479 2009-04-13 14:33:26Z kris $
##

##
# This file is part of the Metasploit Framework and may be subject to 
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##


require 'msf/core'


class Metasploit3 < Msf::Exploit::Remote

	#
	# This module does basically nothing
	#

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'Generic Payload Handler',
			'Description'    => %q{
				This module is a stub that provides all of the
				features of the Metasploit payload system to exploits
				that have been launched outside of the framework.
			},
			'License'        => MSF_LICENSE,
			'Author'         =>  ['hdm'],
			'Version'        => '$Revision: 6479 $',
			'References'     =>  [ ],
			'Payload'        =>
				{
					'Space'       => 100000,
					'BadChars'    => '',
					'DisableNops' => true,
				},
			'Platform'       => [ 'win', 'linux', 'solaris', 'unix', 'osx', 'bsd' ],
			'Arch'           => ARCH_ALL,
			'Targets'        => [ [ 'Wildcard Target', { } ] ],
			'DefaultTarget'  => 0
			))

		register_advanced_options(
			[
				OptBool.new("ExitOnSession", [ false, "Return from the exploit after a session has been created", true ])
			], self.class)
	end

	def exploit
		print_status "Starting the payload handler..."
		while(true)
			break if session_created? and datastore['ExitOnSession']

			sleep(1)
		end
	end


end
